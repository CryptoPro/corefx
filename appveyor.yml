# version format
version: 1.0.{build}

# branches to build
#branches:
#  # whitelist
#  only:
#    - master
    
# Build worker image (VM template)
image:
  - Visual Studio 2019
  - Ubuntu

# RDP user is DAIAD\appveyor
# password in project settings
# more rdp info https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
#environment:
#  APPVEYOR_RDP_PASSWORD: <password_here>

# disable automatic test discovery, xUnit already runs as part of build.cmd
test: off

on_finish:
  # uncomment line below to make VM wait untill RdpConnection
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    # pushing all *.nupkg files in build directory recursively
  #- ps: Get-ChildItem "artifacts\packages\**\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
  #- ps: Get-ChildItem "artifacts\packages\**\symbols\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

  
# runnng specified tests  
test_script:
  - dotnet --info
  - dotnet msbuild  src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Primitives\\tests /t:BuildAndTest /p:ForceRunTests=true
  - dotnet msbuild src\\Common\\tests /t:BuildAndTest /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Csp\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3411.Tests.Gost3411CryptoServiceProviderTests" /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411_2012_256Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411_2012_512Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACGost3411Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACGost3411_2012_256Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.MD5Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.SHA1Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.SHA256Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.SHA384Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.SHA512Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACMD5Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACSHA1Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACSHA256Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACSHA384Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.HMACSHA512Tests"  /p:ForceRunTests=true
  # - dotnet msbuild src\\System.Security.Cryptography.Algorithms\\tests /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.ReusabilityTests"  /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Csp\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410CryptoServiceProviderTests" /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Csp\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410_2012_256CryptoServiceProviderTests" /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Csp\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410_2012_512CryptoServiceProviderTests" /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Csp\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Csp.Tests.Gost28147CryptoServiceProviderTest" /p:ForceRunTests=true
  - dotnet msbuild src\\System.Security.Cryptography.Xml\\tests /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Xml.Tests.GostSignedXmlTest"  /p:ForceRunTests=true


#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Csp\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.X509Certificates\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Pkcs\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Xml\tests\
 
#Start of Windows specific configuration

for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  # install csp
  install:
  - cmd: cspTools\CSPSetup.exe -silent -lang eng -noreboot -nodlg -args "PIDKEY=5050E-30030-06W59-AW5WP-D3G5M /quiet"
  - ps: Start-Sleep -s 160
  - cmd: regedit.exe /S cspTools\disableWarnings.reg
  - ps: Restart-Computer -Force
  - ps: Start-Sleep -s 10
  - ps: New-Item -ItemType Directory -Force -Path "$env:LOCALAPPDATA\Crypto Pro"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2001256.000" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2012256.001" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2012512.000" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 75 -provider "Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider" -pattern "G2001256.000"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 80 -pattern "G2012256"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 81 -pattern "G2012512"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -keyset -enum_c -verifyc -uniq'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -keyset -enum_c -verifyc -fqcn'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -enum -info -type PP_ENUMALGS'
  # getting pached nuget packages with gost support
  - cmd: git clone https://github.com/CryptoProLLC/NetStandard.Library
  - ps: New-Item -ItemType Directory -Force -Path "$env:userprofile\.nuget\packages\netstandard.library"
  - ps: Copy-Item -Force -Recurse ".\NetStandard.Library\nugetReady\netstandard.library" -Destination "$env:userprofile\.nuget\packages\"
  # enable-rdp
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

  # build script logic
  build_script:
    - build.cmd
    - build.cmd -c Release

  # artifacts on successful build 
  artifacts:
    #- path: artifacts\packages\**\*.nupkg
    #  name: packages
    - path: artifacts\packages
      name: packages
      type: zip
    - path: artifacts\bin\runtime
      name: runtime
      type: zip

  # deploy result
  deploy:
    release: $(APPVEYOR_REPO_TAG_NAME)
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: $(APPVEYOR_REPO_COMMIT_MESSAGE)
    provider: GitHub
    auth_token:
      secure: 8tOMOmXZegbWNKbYUtypH+LVj6bj5dYWXbnSPWwWNqZldVnuY+lQQv1r2oFeBMMU # your encrypted token from GitHub
    artifact: packages*
    draft: true
    prerelease: true
    on:
      #branch: 
      #  - master                 # release from master branch only
      #  - Fasjeit-auto-build
      appveyor_repo_tag: true        # deploy only on tag push


#Start of Linux specific build configuration
-
  matrix:
    only:
      - image: Ubuntu
  install:
  - sh: sudo apt-get update
  - sh: sudo apt install -y lsb lsb-core alien libkrb5-dev
  - sh: cd ./cspTools
  - sh: tar -xf linux_amd64_deb.tar
  - sh: sudo ./linux_amd64_deb/install.sh
  - sh: sudo /opt/cprocsp/sbin/amd64/cpconfig -license -set "5050C-90030-05B5W-LTHVH-PFPU2"
  #install container
  - sh: mkdir -p /var/opt/cprocsp/keys/appveyor/
  - sh: cp -r ./G2001256.000 /var/opt/cprocsp/keys/appveyor/
  - sh: cp -r ./G2012256.001 /var/opt/cprocsp/keys/appveyor/
  - sh: cp -r ./G2012512.000 /var/opt/cprocsp/keys/appveyor/
  - sh: cd ../
  - sh: /opt/cprocsp/bin/amd64/csptest  -absorb -certs -provtype 75 -provider "Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider" -pattern "G2001256.000"
  - sh: /opt/cprocsp/bin/amd64/csptest  -absorb -certs -provtype 80 -pattern "G2012256"
  - sh: /opt/cprocsp/bin/amd64/csptest  -absorb -certs -provtype 81 -pattern "G2012512"
  - sh: /opt/cprocsp/bin/amd64/csptest  -keyset -enum_c -verifyc -uniq
  - sh: /opt/cprocsp/bin/amd64/csptest  -keyset -enum_c -verifyc -fqcn
  # getting patched nuget packages with gost support
  - sh: git clone https://github.com/CryptoProLLC/NetStandard.Library
  - sh: mkdir -p ~/.nuget/packages/netstandard.library
  - sh: cp -r ./NetStandard.Library/nugetReady/netstandard.library ~/.nuget/packages/
  # disable warnings
  - sh: sudo sed -i '/[Parameters]/a warning_time_gen_2001=ll:9223372036854775807' /etc/opt/cprocsp/config64.ini
  - sh: sudo sed -i '/[Parameters]/a warning_time_sign_2001=ll:9223372036854775807' /etc/opt/cprocsp/config64.ini

  build_script:
    - sh: ./build.sh
    - sh: ./build.sh -c Release

  # artifacts on successful build 
  artifacts:
    - path: artifacts/packages
      name: packages
      type: zip
    - path: artifacts/bin/runtime
      name: runtime
      type: zip
      # - path: artifacts/packages
      #   name: packages
      #   type: zip

