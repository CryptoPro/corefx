# version format
version: 1.0.{build}

# branches to build
branches:
  # whitelist
  only:
    - master
    - Fasjeit-auto-build
    
# Build worker image (VM template)
image: Visual Studio 2017

# build script logic
build_script: 
  - clean -all
  - build.cmd  
  
# runnng specified tests  
test_script:
  - cd .dotnet\
  - dotnet --info
  - dotnet msbuild /t:BuildAndTest ..\src\Common\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.Algorithms\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.Primitives\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.Csp\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.X509Certificates\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.Pkcs\tests\
  - dotnet msbuild /t:BuildAndTest ..\src\System.Security.Cryptography.Xml\tests\
 
# artifacts on succesfull build 
#artifacts:
#  - path: "bin\packages\**\*.nupkg"
 
# deploy result
deploy:
  release: myproduct-v$(appveyor_build_version)
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: AgLJJ7atvqq1zjQuSLvVlFxMFj5bc6MujZhmPWqgMrkuXnmCkRJWhDoTxniXoHIK # your encrypted token from GitHub
  artifact: /.*\.nupkg/          # upload all NuGet packages to release assets
  draft: true
  prerelease: true
  on:
    branch: 
      - master                 # release from master branch only
      - Fasjeit-auto-build
    appveyor_repo_tag: false        # deploy not only on tag push
    
on_finish:
  # pushing all *.nupkg files in build directory recursively
- ps: Get-ChildItem "bin\packages\**\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
